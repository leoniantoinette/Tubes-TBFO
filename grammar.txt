S -> S S
S -> ASSIGNMENT
S -> FOR_STMT
S -> IF_STMT
S -> FUNC_DEF
S -> IMPORT_STMT
S -> PASS
S -> RAISE_STMT
S -> WHILE_STMT
FROM -> 'FROM'
IMPORT -> 'IMPORT'
AS -> 'AS'
CLASS -> 'CLASS'
DEF -> 'DEF'
RETURN -> 'RETURN'
PASS -> 'PASS'
RAISE -> 'RAISE'
CONTINUE -> 'CONTINUE'
BREAK -> 'BREAK'
IF -> 'IF'
IF_LPAR -> 'IF_LPAR'
ELIF -> 'ELIF'
ELIF_LPAR -> 'ELIF_LPAR'
ELSE -> 'ELSE'
FOR -> 'FOR'
IN -> 'IN'
RANGE -> 'RANGE'
RANGE_LPAR -> 'RANGE_LPAR'
WHILE -> 'WHILE'
WHILE_LPAR -> 'WHILE_LPAR'
NONE -> 'NONE'
TRUE -> 'TRUE'
FALSE -> 'FALSE'
NOT -> 'NOT'
IS -> 'IS'
WITH -> 'WITH'
PRINT -> 'PRINT'
STRING -> 'STRING'
WITH_METHOD -> 'WITH_METHOD'
COLON -> 'COLON'
SEMICOLON -> 'SEMICOLON'
INTEGER -> 'INTEGER'
DECIMAL -> 'DECIMAL'
VAR -> 'VAR'
PLUS -> 'PLUS'
MINUS -> 'MINUS'
POWER -> 'POWER'
MULTIPLY -> 'MULTIPLY'
SLASH -> 'SLASH'
PERCENT -> 'PERCENT'
DOUBLESLASH -> 'DOUBLESLASH'
EQUAL -> 'EQUAL'
PLUSEQUAL -> 'PLUSEQUAL'
MINEQUAL -> 'MINEQUAL'
STAREQUAL -> 'STAREQUAL'
SLASHEQUAL -> 'SLASHEQUAL'
PERCENTEQUAL -> 'PERCENTEQUAL'
DSLASHEQUAL -> 'DSLASHEQUAL'
POWEREQUAL -> 'POWEREQUAL'
ANDEQUAL -> 'ANDEQUAL'
OREQUAL -> 'OREQUAL'
XOREQUAL -> 'XOREQUAL'
RSHIFTEQUAL -> 'RSHIFTEQUAL'
LSHIFTEQUAL -> 'LSHIFTEQUAL'
EQEQUAL -> 'EQEQUAL'
NOTEQUAL -> 'NOTEQUAL'
GREATER -> 'GREATER'
LESS -> 'LESS'
GREATEREQUAL -> 'GREATEREQUAL'
LESSEQUAL -> 'LESSEQUAL'
AND -> 'AND'
OR -> 'OR'
BITAND -> 'BITAND'
BITOR -> 'BITOR'
BITNOT -> 'BITNOT'
BITXOR -> 'BITXOR'
LEFTSHIFT -> 'LEFTSHIFT'
RIGHTSHIFT -> 'RIGHTSHIFT'
LSQB -> 'LSQB'
RSQB -> 'RSQB'
LPAR -> 'LPAR'
RPAR -> 'RPAR'
COMMA -> 'COMMA'
BOOLEAN -> TRUE
BOOLEAN -> FALSE
BOOLEAN -> BOOLEAN LOGICAL_OPS BOOLEAN
BOOLEAN -> NOT BOOLEAN
NUMBER -> INTEGER
NUMBER -> DECIMAL
STRINGS -> STRING
STRINGS -> STRINGS PLUS STRING
ARITH_OPS -> PLUS
ARITH_OPS -> MINUS
ARITH_OPS -> POWER
ARITH_OPS -> MULTIPLY
ARITH_OPS -> SLASH
ARITH_OPS -> PERCENT
ARITH_OPS -> DOUBLESLASH
ASSIGN_OPS -> PLUSEQUAL
ASSIGN_OPS -> MINEQUAL
ASSIGN_OPS -> STAREQUAL
ASSIGN_OPS -> SLASHEQUAL
ASSIGN_OPS -> PERCENTEQUAL
ASSIGN_OPS -> DSLASHEQUAL
ASSIGN_OPS -> POWEREQUAL
ASSIGN_OPS -> ANDEQUAL
ASSIGN_OPS -> OREQUAL
ASSIGN_OPS -> XOREQUAL
ASSIGN_OPS -> RSHIFTEQUAL
ASSIGN_OPS -> LSHIFTEQUAL
COMPARE_OPS -> EQEQUAL
COMPARE_OPS -> NOTEQUAL
COMPARE_OPS -> GREATER
COMPARE_OPS -> LESS
COMPARE_OPS -> GREATEREQUAL
COMPARE_OPS -> LESSEQUAL
COMPARE_OPS -> IS
LOGICAL_OPS -> AND
LOGICAL_OPS -> OR
BITWISE_OPS -> BITAND
BITWISE_OPS -> BITOR
BITWISE_OPS -> BITNOT
BITWISE_OPS -> BITXOR
BITWISE_OPS -> LEFTSHIFT
BITWISE_OPS -> RIGHTSHIFT
OBJECT -> STRING
OBJECT -> NUMBER
OBJECT -> VAR
OBJECT -> BOOLEAN
OBJECT -> NONE
EXPRESSION -> OBJECT
EXPRESSION -> LPAR EXPRESSION RPAR
EXPRESSION -> LPAR EXPRESSION RPAR LOGICAL_OPS EXPRESSION
EXPRESSION -> LPAR EXPRESSION RPAR ARITH_OPS EXPRESSION
EXPRESSION -> OBJECT ARITH_OPS EXPRESSION
EXPRESSION -> OBJECT COMPARE_OPS EXPRESSION
EXPRESSION -> OBJECT LOGICAL_OPS EXPRESSION
EXPRESSION -> EXPRESSION COMPARE_OPS EXPRESSION
EXPRESSION -> NOT EXPRESSION
EXPRESSION1 -> EXPRESSION
EXPRESSION1 -> LPAR EXPRESSION RPAR
EXPRESSION2 -> EXPRESSION
EXPRESSION2 -> EXPRESSION RPAR
ASSIGNMENT -> VAR EQUAL OBJECT
ASSIGNMENT -> VAR EQUAL STRINGS
ASSIGNMENT -> VAR EQUAL EXPRESSION1
ASSIGNMENT -> VAR ASSIGN_OPS NUMBER
ASSIGNMENT -> VAR ASSIGN_OPS VAR
BREAKCONT -> BREAK
BREAKCONT -> CONTINUE
LIST -> LSQB CONT_LIST RSQB
CONT_LIST -> CL1
CONT_LIST -> CL1 COMMA CL1
CONT_LIST -> CL2
CONT_LIST -> CL2 IF EXPRESSION1
CONT_LIST -> CL3
CL1 -> NUMBER
CL1 -> STRING
CL1 -> BOOLEAN
CL1 -> LIST
CL2 -> VAR FOR VAR IN STRING
CL2 -> VAR FOR VAR IN VAR
CL2 -> CL1 FOR VAR IN STRING
CL2 -> CL1 FOR VAR IN VAR
CL3 -> VAR FOR VAR IN RANGE1
CL3 -> CL1 FOR VAR IN RANGE1
FOR_STMT -> FOR_STMT ELSE
FOR_STMT -> FOR VAR IN VAR COLON LOOP_CONT
FOR_STMT -> FOR VAR IN STRING COLON LOOP_CONT
FOR_STMT -> FOR VAR IN LPAR VAR RPAR COLON LOOP_CONT
FOR_STMT -> FOR VAR IN RANGE1 COLON LOOP_CONT
LOOP_CONT -> S
LOOP_CONT -> LOOP_IF
LOOP_CONT -> LOOP_IF LOOP_ELIF
LOOP_CONT -> LOOP_IF LOOP_ELSE
LOOP_CONT -> LOOP_IF LOOP_ELIF LOOP_ELSE
LOOP_IF -> LOOP_IF1
LOOP_IF -> LOOP_IF1 LOOP_IF1
LOOP_IF1 -> IF EXPRESSION1 COLON BREAKCONT
LOOP_IF1 -> IF EXPRESSION1 COLON S BREAKCONT
LOOP_IF1 -> IF_LPAR EXPRESSION2 COLON BREAKCONT
LOOP_IF1 -> IF_LPAR EXPRESSION2 COLON S BREAKCONT
LOOP_ELIF -> LOOP_ELIF1
LOOP_ELIF -> LOOP_ELIF1 LOOP_ELIF1
LOOP_ELIF1 -> ELIF EXPRESSION1 COLON BREAKCONT
LOOP_ELIF1 -> ELIF EXPRESSION1 COLON S BREAKCONT
LOOP_ELIF1 -> ELIF_LPAR EXPRESSION2 COLON BREAKCONT
LOOP_ELIF1 -> ELIF_LPAR EXPRESSION2 COLON S BREAKCONT
LOOP_ELSE -> ELSE COLON BREAKCONT
LOOP_ELSE -> ELSE COLON S BREAKCONT
RANGE1 -> RANGE2
RANGE1 -> RANGE3
RANGE2 -> RANGE EXPRESSION1
RANGE2 -> RANGE LPAR EXPRESSION1 COMMA EXPRESSION1 RPAR
RANGE2 -> RANGE LPAR EXPRESSION1 COMMA EXPRESSION1 COMMA EXPRESSION1 RPAR
RANGE3 -> RANGE_LPAR EXPRESSION2
RANGE3 -> RANGE_LPAR EXPRESSION2 COMMA EXPRESSION1 RPAR
RANGE3 -> RANGE_LPAR EXPRESSION2 COMMA EXPRESSION1 COMMA EXPRESSION1 RPAR
IF_STMT -> IF1
IF_STMT -> IF1 ELIF1
IF_STMT -> IF1 ELSE1
IF_STMT -> IF1 ELIF1 ELSE1
IF1 -> IF1 IF1
IF1 -> IF2
IF1 -> IF3
IF2 -> IF EXPRESSION1 COLON S
IF3 -> IF_LPAR EXPRESSION2 COLON S
ELIF1 -> ELIF1 ELIF1
ELIF1 -> ELIF2
ELIF1 -> ELIF3
ELIF2 -> ELIF EXPRESSION1 COLON S
ELIF3 -> ELIF_LPAR EXPRESSION2 COLON S
ELSE1 -> ELSE COLON S
FUNC_DEF -> DEF1
FUNC_DEF -> DEF1 RETURN
FUNC_DEF -> DEF1 RETURN EXPRESSION1
FUNC_DEF -> DEF1 RETURN LPAR RPAR
DEF1 -> DEF VAR LPAR RPAR COLON
DEF1 -> DEF VAR LPAR RPAR COLON S
DEF1 -> DEF VAR LPAR PARAM RPAR COLON S
PARAM -> VAR
PARAM -> VAR COMMA PARAM
IMPORT_STMT -> IMPORT_NAME
IMPORT_STMT -> IMPORT_FROM
IMPORT_NAME -> IMPORT VAR
IMPORT_NAME -> IMPORT VAR AS VAR
IMPORT_FROM -> FROM VAR IMPORT_NAME
EXCEPTION -> 'EOFERR'
EXCEPTION -> 'FLOATPOINTERR'
EXCEPTION -> 'GENEXIT'
EXCEPTION -> 'IMPORTERR'
EXCEPTION -> 'IDXERR'
EXCEPTION -> 'KEYERR'
EXCEPTION -> 'KEYBINTER'
EXCEPTION -> 'MEMERR'
EXCEPTION -> 'NAMEERR'
EXCEPTION -> 'NOTIMPLMTERR'
EXCEPTION -> 'OSERR'
EXCEPTION -> 'OVERFLOWERR'
EXCEPTION -> 'REFERR'
EXCEPTION ->'RUNTIMEERR'
EXCEPTION -> 'STOPITERATE'
EXCEPTION -> 'SYNTAXERR'
EXCEPTION -> 'INDENTERR'
EXCEPTION -> 'TABERR'
EXCEPTION -> 'SYSERR'
EXCEPTION -> 'SYSEXIT'
EXCEPTION -> 'TYPEERR'
EXCEPTION -> 'UNBOUNDLCLERR'
EXCEPTION -> 'UNICODEERR'
EXCEPTION -> 'UNICODEDCDERR'
EXCEPTION -> 'UNICODETRANSERR'
EXCEPTION -> 'VALUEERR'
EXCEPTION -> 'ZERODIVERR'
EXCEPTION -> 'ASSERTERR'
EXCEPTION -> 'ATTRERR'
EXCEPTION -> 'EXCPTERR'
EXCEPTION -> 'STOPASYNCITER'
EXCEPTION -> 'ARITHERR
EXCEPTION -> 'BUFFERERR'
EXCEPTION -> 'IMPORTERR'
EXCEPTION -> 'MODULEERR'
EXCEPTION -> 'LOOKUPERR'
EXCEPTION -> 'BLOCKIOERR'
EXCEPTION -> 'CHILDERR'
EXCEPTION -> 'CONNECTERR'
EXCEPTION -> 'BROKENPIPEERR'
EXCEPTION -> 'CONNECTABORTERR'
EXCEPTION -> 'CONNECTREFERR'
EXCEPTION -> 'CONNECTRSTERR'
EXCEPTION -> 'FILEEXTERR'
EXCEPTION -> 'FILENOTFOUNDERR'
EXCEPTION -> 'INTERRUPTERR'
EXCEPTION -> 'ISADIRERR'
EXCEPTION -> 'NOTADIRERR'
EXCEPTION -> 'PERMISSIONERR'
EXCEPTION -> 'PROCESSLOOKUPERR'
EXCEPTION -> 'TIMEOUTERR'
EXCEPTION -> 'RECURSIONERR'
EXCEPTION -> 'WARNING'
EXCEPTION -> 'DEPRECATIONWARN'
EXCEPTION -> 'PENDDEPRECWARN'
EXCEPTION -> 'RUNTIMEWARN'
EXCEPTION -> 'SYNTAXWARN'
EXCEPTION -> 'USERWARN'
EXCEPTION -> 'FUTUREWARN'
EXCEPTION -> 'IMPORTWARN'
EXCEPTION -> 'UNICODEWARN'
EXCEPTION -> 'BYTESWARN'
EXCEPTION -> 'ENCODEWARN'
EXCEPTION -> 'RESOURCEWARN'
RAISE_STMT -> RAISE EXCEPTION
RAISE_STMT -> RAISE EXCEPTION LPAR STRING RPAR
WHILE_STMT -> WHILE1
WHILE_STMT -> WHILE2
WHILE1 -> WHILE EXPRESSION1 COLON LOOP_CONT
WHILE2 -> WHILE_LPAR EXPRESSION2 COLON LOOP_CONT